Тестовое задание

Задание: Разработка API для обработки и публикации данных

Цель: Проверить навыки проектирования API, работы с PostgreSQL, интеграции Kafka и практического применения FastAPI.

Сценарий

Вы работаете над системой обработки данных для аналитической платформы. Данные поступают в систему через API, сохраняются в PostgreSQL, а затем публикуются в Kafka для последующей обработки другими сервисами.

Вам нужно:

Создать REST API, которое:

- Принимает JSON данные от пользователя.

- Сохраняет данные в таблице PostgreSQL.

- Валидирует входящие данные.

- Опубликовать эти данные в Kafka.

- Реализовать endpoint для получения списка всех сохраненных записей.

Требования

1. База данных (PostgreSQL)

Создать таблицу data_entries со следующими полями:

id (serial primary key)

content (jsonb) — данные в формате JSON

created_at (timestamp) — время создания записи

2. API (FastAPI)

Endpoint 1: POST /data

Принимает JSON в теле запроса.

Валидирует наличие поля content (строка, обязательное).

Сохраняет данные в таблицу data_entries.

Публикует данные в Kafka с ключом data_entry.

Возвращает ID сохраненной записи.

Endpoint 2: GET /data

Возвращает все записи из таблицы data_entries.

3. Kafka

Создать продюсер, который публикует каждую запись в тему data_topic.

Критерии оценки

Архитектура и стиль кода:

Использование Pydantic для валидации данных.

Применение асинхронного подхода (async/await).

Работа с базой данных:

Использование SQLAlchemy или другой ORM.

Корректная работа с транзакциями.

Интеграция с Kafka:

Использование библиотеки для работы с Kafka (например, aiokafka).

Правильное конфигурирование Kafka-продюсера.

Логирование и обработка ошибок:

Добавление логов с использованием loguru.

Корректная обработка ошибок (например, неправильные входные данные).

Документация:

Автоматическая генерация документации с FastAPI.

Понятные комментарии в коде.

Пример данных

Запрос к POST /data:

json

Копировать код

{

  "content": "Hello, Kafka!"

}

Ответ:

json

Копировать код

{

  "id": 1,

  "message": "Data saved and published to Kafka."

}

Ответ от GET /data:

json

Копировать код

[

  {

    "id": 1,

    "content": "Hello, Kafka!",

    "created_at": "2024-12-03T10:00:00"

  }

]